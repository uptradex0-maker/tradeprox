<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - TrustX Trading</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0d1421 0%, #1a1d29 100%);
            color: white;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .auth-container {
            background: #1e2329;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 0 30px rgba(240, 185, 11, 0.3);
            width: 100%;
            max-width: 400px;
        }
        .logo {
            text-align: center;
            margin-bottom: 30px;
        }
        .logo h1 {
            color: #f0b90b;
            font-size: 32px;
            margin-bottom: 5px;
        }
        .logo p {
            color: #8c8c8c;
            font-size: 14px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #f0b90b;
            font-weight: 600;
        }
        .form-group input {
            width: 100%;
            padding: 15px;
            background: #2b2f36;
            border: 1px solid #3c4043;
            border-radius: 8px;
            color: white;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        .form-group input:focus {
            outline: none;
            border-color: #f0b90b;
        }
        .btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(135deg, #f0b90b, #e6a800);
            border: none;
            border-radius: 10px;
            color: #000;
            font-size: 18px;
            font-weight: 700;
            cursor: pointer;
            transition: transform 0.2s;
            margin-bottom: 15px;
        }
        .btn:hover {
            transform: scale(1.02);
        }
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }
        .switch-auth {
            text-align: center;
            margin-top: 20px;
        }
        .switch-auth a {
            color: #f0b90b;
            text-decoration: none;
            font-weight: 600;
        }
        .switch-auth a:hover {
            text-decoration: underline;
        }
        .error {
            background: #f84960;
            color: white;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 15px;
            text-align: center;
        }
        .success {
            background: #02c076;
            color: white;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 15px;
            text-align: center;
        }
        .loading {
            display: none;
            text-align: center;
            color: #f0b90b;
        }
    </style>
</head>
<body>
    <div class="auth-container">
        <div class="logo">
            <h1>üöÄ TrustX</h1>
            <p>Professional Trading Platform</p>
        </div>

        <div id="message"></div>
        <div id="loading" class="loading">Processing...</div>

        <!-- Login Form -->
        <form id="loginForm">
            <div class="form-group">
                <label for="loginUsername">Username</label>
                <input type="text" id="loginUsername" required>
            </div>
            <div class="form-group">
                <label for="loginPassword">Password</label>
                <input type="password" id="loginPassword" required>
            </div>
            <button type="submit" class="btn" id="loginBtn">üîë Login</button>
        </form>

        <!-- Register Form -->
        <form id="registerForm" style="display: none;">
            <div class="form-group">
                <label for="registerUsername">Username</label>
                <input type="text" id="registerUsername" required>
            </div>
            <div class="form-group">
                <label for="registerPassword">Password</label>
                <input type="password" id="registerPassword" required>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" id="confirmPassword" required>
            </div>
            <button type="submit" class="btn" id="registerBtn">üìù Register</button>
        </form>

        <div class="switch-auth">
            <span id="switchText">Don't have an account?</span>
            <a href="#" id="switchLink">Register here</a>
        </div>
    </div>

    <script>
        let isLoginMode = true;
        
        const loginForm = document.getElementById('loginForm');
        const registerForm = document.getElementById('registerForm');
        const switchLink = document.getElementById('switchLink');
        const switchText = document.getElementById('switchText');
        const messageDiv = document.getElementById('message');
        const loadingDiv = document.getElementById('loading');

        // Switch between login and register
        switchLink.addEventListener('click', (e) => {
            e.preventDefault();
            isLoginMode = !isLoginMode;
            
            if (isLoginMode) {
                loginForm.style.display = 'block';
                registerForm.style.display = 'none';
                switchText.textContent = "Don't have an account?";
                switchLink.textContent = 'Register here';
            } else {
                loginForm.style.display = 'none';
                registerForm.style.display = 'block';
                switchText.textContent = 'Already have an account?';
                switchLink.textContent = 'Login here';
            }
            clearMessage();
        });

        // Show message
        function showMessage(message, type = 'error') {
            messageDiv.innerHTML = `<div class="${type}">${message}</div>`;
            setTimeout(() => clearMessage(), 5000);
        }

        function clearMessage() {
            messageDiv.innerHTML = '';
        }

        function showLoading(show) {
            loadingDiv.style.display = show ? 'block' : 'none';
            document.getElementById('loginBtn').disabled = show;
            document.getElementById('registerBtn').disabled = show;
        }

        // Login form handler
        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const username = document.getElementById('loginUsername').value.trim();
            const password = document.getElementById('loginPassword').value;
            
            if (!username || !password) {
                showMessage('Please fill in all fields');
                return;
            }

            showLoading(true);
            
            try {
                const response = await fetch('/api/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, password })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    // Store user data
                    localStorage.setItem('tradepro_username', username);
                    localStorage.setItem('tradepro_user_id', username);
                    localStorage.setItem('tradepro_logged_in', 'true');
                    
                    showMessage('Login successful! Redirecting...', 'success');
                    setTimeout(() => {
                        window.location.href = '/dashboard';
                    }, 1000);
                } else {
                    showMessage(data.message || 'Login failed');
                }
            } catch (error) {
                showMessage('Network error. Please try again.');
            } finally {
                showLoading(false);
            }
        });

        // Register form handler
        registerForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const username = document.getElementById('registerUsername').value.trim();
            const password = document.getElementById('registerPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (!username || !password || !confirmPassword) {
                showMessage('Please fill in all fields');
                return;
            }

            if (password !== confirmPassword) {
                showMessage('Passwords do not match');
                return;
            }

            if (password.length < 4) {
                showMessage('Password must be at least 4 characters');
                return;
            }

            if (username.length < 3) {
                showMessage('Username must be at least 3 characters');
                return;
            }

            showLoading(true);
            
            try {
                const response = await fetch('/api/register', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, password })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showMessage('Registration successful! Please login.', 'success');
                    // Switch to login form
                    setTimeout(() => {
                        isLoginMode = true;
                        loginForm.style.display = 'block';
                        registerForm.style.display = 'none';
                        switchText.textContent = "Don't have an account?";
                        switchLink.textContent = 'Register here';
                        document.getElementById('loginUsername').value = username;
                        clearMessage();
                    }, 2000);
                } else {
                    showMessage(data.message || 'Registration failed');
                }
            } catch (error) {
                showMessage('Network error. Please try again.');
            } finally {
                showLoading(false);
            }
        });

        // Check if already logged in
        if (localStorage.getItem('tradepro_logged_in') === 'true') {
            window.location.href = '/dashboard';
        }
    </script>
</body>
</html>